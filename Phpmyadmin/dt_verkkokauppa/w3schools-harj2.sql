
-- ==================================================================
-- ALKAEN T√ÑST√Ñ W3SCHOOLS-HARJ2.SQL
-- MUUTAMIA HARJOITUKSIA W3SCHOOLS JA LIS√Ñ√Ñ EDITOITUNA

-- SQL HAVING Clause
-- üîπ HAVING lis√§ttiin SQL:√§√§n, koska WHERE ei voi suodattaa aggregaattifunktioita kuten SUM(), AVG(), COUNT(), MAX() ja MIN(). üîπ Se toimii yhdess√§ GROUP BY -lauseen kanssa, jotta voidaan suodattaa ryhm√§n tuloksia aggregaattifunktioiden perusteella.


-- T√§m√§ n√§ytt√§√§ vain ne asiakkaat, joilla on enemm√§n kuin yksi tilaus. Esim. yksi tai useammalla henkil√∂ll√§ on pari-muutama tilausta laskettuna
SELECT asiakas_id, COUNT(*) AS tilauksien_maara
FROM Tilaukset
GROUP BY asiakas_id
HAVING tilauksien_maara > 1;


-- lis√§sin JOIN yhdist√§m√§ll√§ Tilauksen ja Asiakkaan taulukon, ett√§ esim. varmistettaan molempien taulukkojen asiakkaiden ja tilauksen id t√§smentyv√§t - ihan kuin reallisessa maailmassa ett√§ menee oikeaan tilaan. HAVING-lauseketta voidaan k√§ytt√§√§, mik√§li jos haluttaisiin ryhmiteltyj√§ tulosta aggregaattifunktiolla. Ja t√§ss√§ suodataan tilausta, joka on yli 2 tilausta.
/*
‚úÖ Mit√§ t√§m√§ tekee?

JOIN yhdist√§√§ asiakkaat ja tilaukset asiakas-ID:n perusteella.

COUNT(Tilaukset.id) laskee, montako tilausta kullakin asiakkaalla on.

GROUP BY ryhmittelee tulokset asiakas ID:n ja nimen mukaan.

HAVING tilauksien_maara > 2 suodattaa vain ne asiakkaat, joilla on yli 2 tilausta.


üìå Milloin HAVING kannattaa k√§ytt√§√§?
‚úî Kun suodatetaan ryhmiteltyj√§ tuloksia, esimerkiksi yli 3 tilausta tehneet asiakkaat. ‚ùå WHERE ei toimi t√§ss√§, koska aggregaattifunktioita ei voi k√§ytt√§√§ siin√§ suoraan.

*/
SELECT Asiakkaat.id, Asiakkaat.nimi, COUNT(Tilaukset.id) AS tilauksien_maara, Tilaukset.toimitus_status 
FROM Asiakkaat JOIN Tilaukset ON Asiakkaat.id = Tilaukset.asiakas_id 
GROUP BY Asiakkaat.id, Asiakkaat.nimi 
HAVING tilauksien_maara > 2; 



-- Laske, kuinka monta kappaletta kutakin tuotetta on tilattu (GROUP BY) ja halutaan n√§hd√§ t√§st√§ kuinka monta kpl:tta kutakin uotetta on tilattu. 
-- Ideana on ryhmittell√§ tuotenimen mukaan ja laskea kuinka monta kappaleta kutakin tuotetta on ostettu.
SELECT Tuotteet.nimi, SUM(Tilauksen_rivit.m√§√§r√§) AS kokonaistilaukset 
FROM Tilauksen_rivit JOIN Tuotteet ON Tilauksen_rivit.tuote_id = Tuotteet.id 
GROUP BY Tuotteet.nimi; 


-- Suodata tuotteet, joiden tilaukset ylitt√§v√§t tietyn m√§√§r√§n (HAVING)
-- t√§st√§ suodataan vain tuotteet, joita on tilattu yli esim. 5 kplta ja vain niit√§ tuotetta
SELECT Tuotteet.nimi, SUM(Tilauksen_rivit.m√§√§r√§) AS kokonaistilaukset 
FROM Tilauksen_rivit JOIN Tuotteet ON Tilauksen_rivit.tuote_id = Tuotteet.id 
GROUP BY Tuotteet.nimi HAVING kokonaistilaukset > 5; 



-- Laske asiakkaan kokonaisostokset (JOIN Tilaukset + GROUP BY)
-- eli haluttaan n√§hd√§ asiakkaiden tilattua kokonais ostosta ja sit√§ summaa, kukin asiakas on k√§ytt√§nyt rahaa/saldoa
SELECT Tilaukset.asiakas_id, SUM(Tilauksen_rivit.yhteishinta) AS asiakkaan_kulut 
FROM Tilauksen_rivit JOIN Tilaukset ON Tilauksen_rivit.tilaus_id = Tilaukset.id 
GROUP BY Tilaukset.asiakas_id; 


-- GROUP BY voidaan yhdist√§√§ WHERE, JOIN, INNER JOIN, ja HAVING COUNT erikseen.

-- esim. laskettaisiin varastontilannetta, ett√§ mukaan ja suodattaa vain tuotteet jotka maksavat esim. yli 50e, ja k√§ytett√§√§n WHERE ennen GROUP BY
SELECT varastotilanne, COUNT(*) AS tuote_maara
FROM Tuotteet
WHERE hinta > 50
GROUP BY varastotilanne;


-- sama kuin ylempi, mutta ryhmitettyn√§ mukaan ja tulostettuna nimet, suodatettaan jolla on alle 5k saldoa
SELECT Asiakkaat.nimi, Asiakkaat.saldo, COUNT(*) AS saldoM√§√§r√§ 
FROM Asiakkaat WHERE Asiakkaat.saldo < 5000 
GROUP BY Asiakkaat.nimi; 


-- GROUP BY + INNER JOIN
-- jos halutaisiin laskea, kuinka monta tuotetta on tilattu per kategoria ja yhdistet√§√§n Tuotteet ja Tilauksen_rivit INNER JOIN:illa molempia taulukkoita.
SELECT Tuotteet.kategoria_id, COUNT(Tilauksen_rivit.tuote_id) AS tilattu_maara
FROM Tuotteet
INNER JOIN Tilauksen_rivit ON Tuotteet.id = Tilauksen_rivit.tuote_id
GROUP BY Tuotteet.kategoria_id;


-- GROUP BY + HAVING COUNT
-- haluttaan n√§ytt√§√§ vain tuotteet, joita on tilattu enemm√§n kuin 2 kertaa, niin k√§ytett√§√§n HAVING COUNT ja ideana on suodattaa pois tuotteet, joita on tilattu ja n√§ytt√§√§ vain ne joita on tilattu enemm√§n
SELECT tuote_id, COUNT(*) AS tilattu_maara 
FROM Tilauksen_rivit 
GROUP BY tuote_id HAVING tilattu_maara > 2; 


-- GROUP BY + JOIN + HAVING COUNT
-- haluttaan n√§ytt√§√§ asiakkaiden nimet, jotka ovat tehneet yli 5 tilausta (sen mukaan mit√§ m√§√§ritt√§√§) ja yhdist√§m√§ll√§ Tilausket ja Asiakkaan taulukkoa, ja suodataan HAVING COUNT-lauseella.

SELECT Asiakkaat.nimi, COUNT(Tilaukset.id) AS tilausten_maara
FROM Asiakkaat
JOIN Tilaukset ON Asiakkaat.id = Tilaukset.asiakas_id
GROUP BY Asiakkaat.nimi
HAVING tilausten_maara > 5;



